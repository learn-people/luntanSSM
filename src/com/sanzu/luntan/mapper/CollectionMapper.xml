<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!--
  1.在这里首先需要关注的一点是namespace，每一个mapper有一个唯一指定的namespace，一般采用包名+mapper的文件名。
	之后再操作数据库时就通过namespace+select的id 这种方式来操作。
  2.mapper内包裹的就是一系列的数据库操作。
  3.<select> 中 id用于 配合namespace定位到具体操作。
  4.parameterType表示参数类型，参数就被传递到#{}所在的地方。
  5.resultType代表了数据的返回类型，这里返回类型就是那个与数据库表信息对应的类 。
-->

<!-- 用户 -->
<mapper namespace="com.sanzu.luntan.mapper.CollectionMapper">
  <!-- 根据用户名查找全部信息 -->
  <select id="selectAll" parameterType="com.sanzu.luntan.pojo.Collection" resultType="com.sanzu.luntan.pojo.Collection">
  	SELECT
	collection.id,
	collection.userNum,
	`user`.userName,
	collection.postId,
	post.postTitle,
	post.postContent,
	post.purview,
	post.lookNum,
	post.postTime,
	post.imgUrl
	FROM
	collection
	INNER JOIN `user` ON collection.userNum = `user`.userNumber
	INNER JOIN post ON collection.postId = post.id
	where collection.userNum = #{userNum}
  </select>
  <!-- 查找收藏信息 -->
  <select id="selectCollection" parameterType="com.sanzu.luntan.pojo.Collection" resultType="int">
  	select count(*) from collection where userNum=#{userNum} and postId=#{postId}
  </select>
  <!-- 添加收藏信息 -->
  <insert id="insertCollection" parameterType="com.sanzu.luntan.pojo.Collection" >
  	insert into collection(userNum,postId) values(#{userNum},#{postId})
  </insert> 
  <!-- 删除收藏信息 -->
  <delete id="deleteCollection" parameterType="com.sanzu.luntan.pojo.Collection">
  	delete from collection where postId=#{postId} and userNum=#{userNum}
  </delete>
</mapper>