<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!--
  1.在这里首先需要关注的一点是namespace，每一个mapper有一个唯一指定的namespace，一般采用包名+mapper的文件名。
	之后再操作数据库时就通过namespace+select的id 这种方式来操作。
  2.mapper内包裹的就是一系列的数据库操作。
  3.<select> 中 id用于 配合namespace定位到具体操作。
  4.parameterType表示参数类型，参数就被传递到#{}所在的地方。
  5.resultType代表了数据的返回类型，这里返回类型就是那个与数据库表信息对应的类 。
-->
<!-- 管理员 -->
<mapper namespace="com.sanzu.luntan.mapper.PostMapper">
  <!-- 查找单个 -->
  <select id="findPostById" resultType="com.sanzu.luntan.pojo.Post">
  	select * from post where id=#{id} or postTitle=#{postTitle} or userNum=#{userNum}
  </select>
  <!-- 查找全部信息 -->
  <select id="queryPostAll" resultType="com.sanzu.luntan.pojo.Post">
  	 SELECT
	post.id,
	`user`.userNumber,
	`user`.userName,
	section.sectionName,
	section.id,
	post.postTitle,
	post.postContent,
	post.likeNum,
	post.commentNum,
	post.postTime
	FROM
	post
	INNER JOIN section ON post.sectionId = section.id
	INNER JOIN `user` ON post.userNum = `user`.userNumber
  </select>
  <!-- 模糊查找 -->
  <select id="queryPostById" parameterType="String" resultType="com.sanzu.luntan.pojo.Post">
  	select * from post where id like '%${value}%'
  </select>
  <!-- 发表贴子 -->
  <insert id="insertPost" parameterType="com.sanzu.luntan.pojo.Post" >
  	insert into post(userNum,sectionId,postTitle,postContent,likeNum,commentNum,postTime,imgUrl,purview,status)
  	values(#{userNum},#{sectionId},#{postTitle},#{postContent},#{likeNum},#{commentNum},#{postTime},#{imgUrl},#{purview},#{status})
  </insert>
  <!-- 更新用户信息 -->
  <update id="updatePostInfo" parameterType="com.sanzu.luntan.pojo.Post">
  	<!-- 记得使用逗号隔开 -->
  	update post set sectionId=#{adminPassword}, postTitle=#{postTitle}, postContent=#{postContent}, imgUrl=#{imgUrl}, purview=#{purview}, status=#{status} where id=#{id}
  </update>
  <!-- 单个删除 -->
 <delete id="deletePostOne" parameterType="int">
  	delete from post where id=#{id}
  </delete>
  <!-- 批量删除 -->
  <delete id="deletePostAll" parameterType="String">
  <!-- 前端封装的是一个list，利用Mybatis给我们的封装进行XML配置，将我们的XML中collection属性值设置为list -->
  	delete from post where id in(
  		<foreach collection="list" item="id" separator=",">
  			#{id}
  		</foreach>
  	)
  </delete>
</mapper>